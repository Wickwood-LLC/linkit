<?php 
// $Id$

/**
 * @file
 * Main file for linkit module.
 */

/**
 * Implementation of hook_menu().
 */
function linkit_menu() {
  $items = array();

  $items['admin/linkit/dashboard/%'] = array(
    'title' => 'Linkit',
    'description' => 'Dashboard',
    'page callback' => 'linkit_dashboard',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'page arguments' => array(3),
  );

  $items['admin/linkit/autocomplete'] = array(
    'title' => 'Link to node',
    'description' => 'description',
    'page callback' => 'linkit_autocomplete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'page arguments' => array(3),
  );

  return $items;
}

/**
 * Implementation of hook_theme().
 */
function linkit_theme($existing, $type, $theme, $path) {
  return array(
    'linkit_dashboard' => array(
      'arguments' => array('content' => NULL),
      'template' => 'linkit-dashboard',
    ),
  );
}

/**
 * Implementation of hook_form_alter().
 */
function linkit_form_alter(&$form, &$form_state, $form_id) {
  if(count($form['#after_build'])) {
    foreach($form['#after_build'] AS $after_build) {
      if($after_build == "ckeditor_process_form") {
        _linkit_add_settings('ckeditor');
      }
    }
  }
}

/**
 * Template preprocess function for theme_linkit_dashboard().
 */
function template_preprocess_linkit_dashboard(&$variables) {
  // Construct page title
  $head_title                 = array(strip_tags(drupal_get_title()), variable_get('site_name', 'Drupal'));
  $variables['head_title']    = implode(' | ', $head_title);
  $variables['base_path']     = base_path();
  $variables['front_page']    = url();
  $variables['head']          = drupal_get_html_head();
  $variables['help']          = theme('help');
  $variables['language']      = $GLOBALS['language'];
  $variables['language']->dir = $GLOBALS['language']->direction ? 'rtl' : 'ltr';
  $variables['messages']      = $variables['show_messages'] ? theme('status_messages') : '';
  $variables['styles']        = drupal_get_css();
  $variables['scripts']       = drupal_get_js();
  $variables['title']         = drupal_get_title();
}

/**
 * Creates the dashboard
 */
function linkit_dashboard($editor) {
	module_invoke('admin_menu', 'suppress');
  // Add CSS.
 	drupal_add_css(drupal_get_path('module', 'linkit') . '/css/linkit.css');
  
  switch($editor) {
    case 'wysiwyg_tinymce':
      // Add JavaScript.
      drupal_add_js(wysiwyg_get_path('tinymce') . '/jscripts/tiny_mce/tiny_mce_popup.js');
      drupal_add_js(drupal_get_path('module', 'linkit') . '/editors/tinymce/linkit.js');
      break;

    case 'ckeditor':
      // Add JavaScript.
      drupal_add_js(drupal_get_path('module', 'linkit') . '/editors/ckeditor/linkitDialog.js');
      break;
  }
  
	print theme('linkit_dashboard', drupal_get_form('_linkit_form'));
  exit();
}

/**
 * Autocomplete callback function
 */
function linkit_autocomplete($string = NULL) {
  $matches = array();
  $hook_matches = array();
  if($string) {
    $hook_matches = module_invoke_all('linkit_load_plugins', $string);
    foreach($hook_matches AS $module => $values) {
      if(module_exists('linkit_permissions')) {
        if(user_access('create '.$module.' links') || user_access('create all links')){
          $matches = array_merge($matches, $hook_matches[$module]);
        }
      } else {
        $matches = array_merge($matches, $hook_matches[$module]);
      }
    }
  }
  
  // Show MAX 10 matches
  if(count($matches) > 10) {
    $matches = array_slice($matches, 0, 10);
  }

  drupal_json($matches);
}

/**
 * Creates the 
 */
function linkit_autolist_list($title = NULL, $type = NULL) {
  $output = '<div class="auto-item-title">' . check_plain($title) . '</div>';
  $output .= '<div class="auto-item-type">[type:' . check_plain($type) . ']</div>';
  return '<div class="clear-block">' . $output . '</div>';
}

/**
 * Autocomplete callback function
 */
function linkit_autolist_val($title = NULL, $path = NULL) {
  return check_plain($title . ' [path:' . $path . ']');
}

/**
 * 
 */
function _linkit_form() {
  $form['link'] = array(
    '#type' => 'fieldset',
    '#title' => '',
    '#weight' => 0,
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#attributes' => array('class' => 'clear-block'),
  );
  $form['link']['link'] = array(
    '#type' => 'textfield',
    '#title' => t('Link to'),
    '#description' => t('Search for your internal content <b>OR</b> type the URL (http://www.example.com)'),
    '#maxlength' => 255,
    '#size' => 80,
    '#autocomplete_path' => 'admin/linkit/autocomplete',
    '#default_value' => '',
    '#weight' => 1,
  );
  $form['link']['attributes'] = array(
    '#type' => 'fieldset',
    '#title' => t('Attributes'),
    '#weight' => 1,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#attributes' => array('class' => 'clear-block'),
    '#weight' => 2,
  );
  $form['link']['attributes']['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#maxlength' => 255,  
    '#size' => 40,
    '#default_value' => '',
    '#weight' => 0,
  );
  $form['link']['attributes']['id'] = array(
    '#type' => 'textfield',
    '#title' => t('ID'),
    '#maxlength' => 255,  
    '#size' => 40,
    '#default_value' => '',
    '#weight' => 1,
  );
  $form['link']['attributes']['class'] = array(
    '#type' => 'textfield',
    '#title' => t('Class'),
    '#maxlength' => 255,  
    '#size' => 40,
    '#default_value' => '',
    '#weight' => 2,
  );
  $form['link']['attributes']['rel'] = array(
    '#type' => 'textfield',
    '#title' => t('Rel'),
    '#maxlength' => 255,  
    '#size' => 40,
    '#default_value' => '',
    '#weight' => 3,
  );
  $form['link']['attributes']['accesskey'] = array(
    '#type' => 'textfield',
    '#title' => t('Accesskey'),
    '#maxlength' => 255,  
    '#size' => 40,
    '#default_value' => '',
    '#weight' => 4,
  );
  $form['link']['cancel'] = array(
    '#type' => 'button',
    '#value' => t('Cancel'),
    '#weight' => 10,
  );
  $form['link']['insert'] = array(
    '#type' => 'button',
    '#value' => t('Insert'),
    '#weight' => 11,
  );

  return $form;
}


function linkit_wysiwyg_plugin($editor, $version) {

  _linkit_add_settings('wysiwyg_' . $editor);

  switch ($editor) {
    case 'tinymce':      
      $plugins['linkit'] = array(
        'path' => drupal_get_path('module', 'linkit') . '/editors/tinymce/editor_plugin.js',
        'buttons' => array('linkit' => t('Linkit')),
        'url' => 'http://drupal.org/project/linkit',
        'load' => TRUE,
      );
      break;
  }

  return $plugins;
}

function _linkit_add_settings($editor) {
  static $settings_added = FALSE;
  
  if (!$settings_added) {
    $settings_added = TRUE;
    
    // Add popup url
    $settings = array(
      'linkit' => array('url' => url('admin/linkit/dashboard/' . $editor)),
    );
    drupal_add_js($settings, 'setting');
  }
}