<?php

/**
 * @file
 * Installation file for linkit.
 */

/**
 * Implements hook_uninstall().
 */
function linkit_uninstall() {
  variable_del('linkit_profiles');
  variable_del('linkit_roles_profiles');
}

/**
 * Implements hook_install().
 */
function linkit_install() {
  // Build a default profile.
  $default_profile[LINKIT_DEFAULT_PRFOLE_MACHINE_NAME] = array(
    'name' => 'Default',
    'machine_name' => LINKIT_DEFAULT_PRFOLE_MACHINE_NAME,
    'plugins' => array(
      'node' => array(
        'weight' => 0,
        'status' => 1,
      )
    ),
    'node' => array(
      'result_description' => '[node:author] - [node:created:short]',
    ),
    'attributes' => array(),
    'advanced' => array(),
  );

  // Save the default profile.
  variable_set('linkit_profiles', $default_profile);

  // Assign the default profile to authenticated users.
  variable_set('linkit_roles_profiles', array(DRUPAL_AUTHENTICATED_RID => LINKIT_DEFAULT_PRFOLE_MACHINE_NAME));
}


/**
 * Update Linkit permission names.
 */
function linkit_update_7100() {
  // See http://drupal.org/node/1050444
  $plugins = array('file', 'node', 'taxonomy', 'user');

  foreach($plugins AS $plugin) {
    db_update('role_permission')
      ->fields(array('permission' => 'use linkit ' . $plugin . ' plugin'))
      ->condition('permission', 'create ' . $plugin . ' links')
      ->condition('module', 'linkit_permissions')
      ->execute();
  }
  
   db_update('role_permission')
      ->fields(array('permission' => 'use all linkit plugins'))
      ->condition('permission', 'create all links')
      ->condition('module', 'linkit_permissions')
      ->execute();

  return t('Linkit permission was successfully updated.');

  // In case of an error, simply throw an exception with an error message.
  throw new DrupalUpdateException(t('Something went wrong; Please go to admin/people/permissions and update your Linkit permissions manually.'));
}